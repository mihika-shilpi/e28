{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/eslint-loader/index.js??ref--13-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/store/index.js","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/store/index.js","mtime":1576815259177},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmltcG9ydCAqIGFzIGFwcCBmcm9tICcuLy4uL2FwcC5qcyc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgZmF2b3VyaXRlc0NvdW50OiAwLAogICAgYWxidW1zOiBbXQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRGYXZvdXJpdGVzQ291bnQ6IGZ1bmN0aW9uIHNldEZhdm91cml0ZXNDb3VudChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5mYXZvdXJpdGVzQ291bnQgPSBwYXlsb2FkOwogICAgfSwKICAgIHVwZGF0ZUZhdm91cml0ZXNDb3VudDogZnVuY3Rpb24gdXBkYXRlRmF2b3VyaXRlc0NvdW50KHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmZhdm91cml0ZXNDb3VudCArPSBwYXlsb2FkOwogICAgfSwKICAgIHNldEFsYnVtczogZnVuY3Rpb24gc2V0QWxidW1zKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmFsYnVtcyA9IHBheWxvYWQ7CiAgICB9LAogICAgYWRkQWxidW06IGZ1bmN0aW9uIGFkZEFsYnVtKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIF8ubWVyZ2Uoc3RhdGUuYWxidW1zLCBwYXlsb2FkKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHNldEFsYnVtczogZnVuY3Rpb24gc2V0QWxidW1zKGNvbnRleHQpIHsKICAgICAgYXBwLmF4aW9zLmdldChhcHAuY29uZmlnLmFwaSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgnc2V0QWxidW1zJywgcmVzcG9uc2UuZGF0YSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0QWxidW1CeUlEOiBmdW5jdGlvbiBnZXRBbGJ1bUJ5SUQoc3RhdGUpIHsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpZCkgewogICAgICAgIHJldHVybiBfLmZpbmQoc3RhdGUuYWxidW1zLCB7CiAgICAgICAgICAnaWQnOiBpZAogICAgICAgIH0pOwogICAgICB9OwogICAgfQogIH0KfSk7"},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/store/index.js"],"names":["Vue","Vuex","app","use","Store","state","favouritesCount","albums","mutations","setFavouritesCount","payload","updateFavouritesCount","setAlbums","addAlbum","_","merge","actions","context","axios","get","config","api","then","response","commit","data","getters","getAlbumByID","id","find"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE,CADd;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADmB;AAM1BC,EAAAA,SAAS,EAAE;AACRC,IAAAA,kBADQ,8BACWJ,KADX,EACkBK,OADlB,EAC2B;AAC/BL,MAAAA,KAAK,CAACC,eAAN,GAAwBI,OAAxB;AACH,KAHO;AAIRC,IAAAA,qBAJQ,iCAIcN,KAJd,EAIqBK,OAJrB,EAI8B;AAClCL,MAAAA,KAAK,CAACC,eAAN,IAAyBI,OAAzB;AACH,KANO;AAORE,IAAAA,SAPQ,qBAOEP,KAPF,EAOSK,OAPT,EAOkB;AACtBL,MAAAA,KAAK,CAACE,MAAN,GAAeG,OAAf;AACH,KATO;AAURG,IAAAA,QAVQ,oBAUCR,KAVD,EAUQK,OAVR,EAUiB;AACrBI,MAAAA,CAAC,CAACC,KAAF,CAAQV,KAAK,CAACE,MAAd,EAAsBG,OAAtB;AACH;AAZO,GANe;AAqB3BM,EAAAA,OAAO,EAAE;AACJJ,IAAAA,SADI,qBACMK,OADN,EACe;AACff,MAAAA,GAAG,CAACgB,KAAJ,CAAUC,GAAV,CAAcjB,GAAG,CAACkB,MAAJ,CAAWC,GAAzB,EAA8BC,IAA9B,CAAmC,UAAAC,QAAQ,EAAI;AAE7CN,QAAAA,OAAO,CAACO,MAAR,CAAe,WAAf,EAA4BD,QAAQ,CAACE,IAArC;AACD,OAHD;AAIH;AANG,GArBkB;AA8BxBC,EAAAA,OAAO,EAAE;AAEPC,IAAAA,YAFO,wBAEMtB,KAFN,EAEa;AAChB,aAAO,UAAUuB,EAAV,EAAc;AACjB,eAAOd,CAAC,CAACe,IAAF,CAAOxB,KAAK,CAACE,MAAb,EAAqB;AAAE,gBAAMqB;AAAR,SAArB,CAAP;AACH,OAFD;AAGH;AANM;AA9Be,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport * as app from './../app.js';\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        favouritesCount: 0,\n        albums: [],\n    },\n\n    mutations: {\n       setFavouritesCount(state, payload) {\n           state.favouritesCount = payload;\n       },\n       updateFavouritesCount(state, payload) {\n           state.favouritesCount += payload;\n       },\n       setAlbums(state, payload) {\n           state.albums = payload;\n       },\n       addAlbum(state, payload) {\n           _.merge(state.albums, payload)\n       }\n   },\n\n   actions: {\n        setAlbums(context) {\n            app.axios.get(app.config.api).then(response => {\n\n              context.commit('setAlbums', response.data)\n            });\n        }\n    },\n\n      getters: {\n\n        getAlbumByID(state) {\n            return function (id) {\n                return _.find(state.albums, { 'id': id })\n            }\n        }\n    }\n})\n"]}]}