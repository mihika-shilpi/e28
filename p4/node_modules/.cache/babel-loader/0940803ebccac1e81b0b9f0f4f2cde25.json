{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/babel-loader/lib/index.js!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/eslint-loader/index.js??ref--13-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/Like.js","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/Like.js","mtime":1576778617223},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9BcHBsaWNhdGlvbnMvWEFNUFAveGFtcHBmaWxlcy9odGRvY3MvZTI4L3A0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL0FwcGxpY2F0aW9ucy9YQU1QUC94YW1wcGZpbGVzL2h0ZG9jcy9lMjgvcDQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKCi8vIC9zcmMvbGlrZS5qcwp2YXIgTGlrZSA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKCkgewogIC8qKgogICAqCiAgICovCiAgZnVuY3Rpb24gTGlrZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaWtlKTsKCiAgICAvLyBFeHRyYWN0IEpTT04gbGlrZSBzdHJpbmcgZnJvbSBsb2NhbCBzdG9yYWdlCiAgICB2YXIgbGlrZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdsaWtlJyk7IC8vIFBhcnNlIEpTT04gbGlrZSBTdHJpbmcgdG8gYGl0ZW1zYCBvYmplY3QKCiAgICB0aGlzLml0ZW1zID0gbGlrZSA/IEpTT04ucGFyc2UobGlrZSkgOiBbXTsKICB9CiAgLyoqCiAgICogR2V0dGVyIG1ldGhvZCBmb3IgaXRlbXMKICAgKi8KCgogIF9jcmVhdGVDbGFzcyhMaWtlLCBbewogICAga2V5OiAiZ2V0SXRlbXMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEl0ZW1zKCkgewogICAgICByZXR1cm4gdGhpcy5pdGVtczsKICAgIH0KICAgIC8qKgogICAgICogUmV0dXJucyBob3cgbWFueSB0b3RhbCBpdGVtcyBhcmUgaW4gdGhlIGxpa2UKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY291bnQoKSB7CiAgICAgIHZhciBzdW0gPSAwOwoKICAgICAgZm9yICh2YXIgX2kgPSAwLCBfT2JqZWN0JGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLml0ZW1zKTsgX2kgPCBfT2JqZWN0JGtleXMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgdmFyIGtleSA9IF9PYmplY3Qka2V5c1tfaV07CiAgICAgICAgc3VtICs9IHRoaXMuaXRlbXNba2V5XS5xdWFudGl0eTsKICAgICAgfQoKICAgICAgcmV0dXJuIHN1bTsKICAgIH0KICAgIC8qKgogICAgICogVXBkYXRlcyBsaWtlIGluIGxvY2Fsc3RvcmFnZQogICAgICovCgogIH0sIHsKICAgIGtleTogInVwZGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnbGlrZScsIEpTT04uc3RyaW5naWZ5KHRoaXMuaXRlbXMpKTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIGEgbmV3IGl0ZW0gb2YgdGhlIGdpdmVuIGFsYnVtSWQKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJhZGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZChhbGJ1bUlkKSB7CiAgICAgIHZhciBxdWFudGl0eSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMTsKICAgICAgLy8gRmlyc3Qgc2VlIGlmIGFsYnVtIGlzIGFscmVhZHkgcHJlc2VudAogICAgICB0aGlzLml0ZW1zLnB1c2goewogICAgICAgIGlkOiBhbGJ1bUlkLAogICAgICAgIHF1YW50aXR5OiBxdWFudGl0eQogICAgICB9KTsKICAgICAgdGhpcy51cGRhdGUoKTsKICAgIH0KICAgIC8qKgogICAgICogUmVtb3ZlIGFuIGl0ZW0gZnJvbSBpdGVtcyB2aWEgYWxidW1JZAogICAgICovCgogIH0sIHsKICAgIGtleTogInJlbW92ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlKGFsYnVtSWQpIHsKICAgICAgdmFyIGl0ZW0gPSB0aGlzLmdldEl0ZW0oYWxidW1JZCk7CiAgICAgIHZhciBpdGVtSW5kZXggPSB0aGlzLml0ZW1zLmluZGV4T2YoaXRlbSk7CgogICAgICBpZiAoaXRlbSkgewogICAgICAgIHRoaXMuaXRlbXMuc3BsaWNlKGl0ZW1JbmRleCwgMSk7CiAgICAgICAgdGhpcy51cGRhdGUoKTsKICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBHZXQgYW4gaXRlbSBmcm9tIGl0ZW1zIHZpYSBhbGJ1bUlkCiAgICAgKiBSZXR1cm5zIG51bGwgaWYgYWxidW0gZG9lcyBub3QgZXhpc3QgaW4gaXRlbXMKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRJdGVtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJdGVtKGFsYnVtSWQpIHsKICAgICAgcmV0dXJuIHRoaXMuaXRlbXMuZmluZChmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciBpZCA9IF9yZWYuaWQ7CiAgICAgICAgcmV0dXJuIGlkID09PSBhbGJ1bUlkOwogICAgICB9KSB8fCBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIExpa2U7Cn0oKTsKCmV4cG9ydCB7IExpa2UgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/Like.js"],"names":["Like","like","localStorage","getItem","items","JSON","parse","sum","Object","keys","key","quantity","setItem","stringify","albumId","push","id","update","item","itemIndex","indexOf","splice","find"],"mappings":";;;;;;;AAAA;IACqBA,I;;;AAEjB;;;AAGA,kBAAc;AAAA;;AACV;AACA,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAFU,CAIV;;AACA,SAAKC,KAAL,GAAcH,IAAD,GAASI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAT,GAA4B,EAAzC;AACH;AAED;;;;;;;+BAGW;AACP,aAAO,KAAKG,KAAZ;AACH;AAED;;;;;;4BAGQ;AACJ,UAAIG,GAAG,GAAG,CAAV;;AACA,sCAAgBC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAjB,CAAhB,kCAAyC;AAApC,YAAIM,GAAG,mBAAP;AACDH,QAAAA,GAAG,IAAI,KAAKH,KAAL,CAAWM,GAAX,EAAgBC,QAAvB;AACH;;AACD,aAAOJ,GAAP;AACH;AAED;;;;;;6BAGS;AACLL,MAAAA,YAAY,CAACU,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACQ,SAAL,CAAe,KAAKT,KAApB,CAA7B;AACH;AAED;;;;;;wBAGIU,O,EAAuB;AAAA,UAAdH,QAAc,uEAAH,CAAG;AAEvB;AACA,WAAKP,KAAL,CAAWW,IAAX,CAAgB;AACRC,QAAAA,EAAE,EAAEF,OADI;AAERH,QAAAA,QAAQ,EAAEA;AAFF,OAAhB;AAKA,WAAKM,MAAL;AACH;AAED;;;;;;2BAGOH,O,EAAS;AACZ,UAAII,IAAI,GAAG,KAAKf,OAAL,CAAaW,OAAb,CAAX;AAEA,UAAIK,SAAS,GAAG,KAAKf,KAAL,CAAWgB,OAAX,CAAmBF,IAAnB,CAAhB;;AAEA,UAAIA,IAAJ,EAAU;AACN,aAAKd,KAAL,CAAWiB,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,aAAKF,MAAL;AACH;AACJ;AAED;;;;;;;4BAIQH,O,EAAS;AACb,aAAO,KAAKV,KAAL,CAAWkB,IAAX,CAAgB;AAAA,YAAGN,EAAH,QAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKF,OAAnB;AAAA,OAAhB,KAA+C,IAAtD;AACH;;;;;;SAxEgBd,I","sourcesContent":["// /src/like.js\nexport default class Like {\n\n    /**\n     *\n     */\n    constructor() {\n        // Extract JSON like string from local storage\n        let like = localStorage.getItem('like');\n\n        // Parse JSON like String to `items` object\n        this.items = (like) ? JSON.parse(like) : [];\n    }\n\n    /**\n     * Getter method for items\n     */\n    getItems() {\n        return this.items;\n    }\n\n    /**\n     * Returns how many total items are in the like\n     */\n    count() {\n        let sum = 0;\n        for (let key of Object.keys(this.items)) {\n            sum += this.items[key].quantity;\n        }\n        return sum;\n    }\n\n    /**\n     * Updates like in localstorage\n     */\n    update() {\n        localStorage.setItem('like', JSON.stringify(this.items))\n    }\n\n    /**\n     * Add a new item of the given albumId\n     */\n    add(albumId, quantity = 1) {\n\n        // First see if album is already present\n        this.items.push({\n                id: albumId,\n                quantity: quantity\n            });\n\n        this.update();\n    }\n\n    /**\n     * Remove an item from items via albumId\n     */\n    remove(albumId) {\n        let item = this.getItem(albumId);\n\n        let itemIndex = this.items.indexOf(item);\n\n        if (item) {\n            this.items.splice(itemIndex, 1);\n            this.update();\n        }\n    }\n\n    /**\n     * Get an item from items via albumId\n     * Returns null if album does not exist in items\n     */\n    getItem(albumId) {\n        return this.items.find(({ id }) => id === albumId) || null;\n    }\n}\n"]}]}