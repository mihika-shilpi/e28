{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/components/pages/HomePage.vue?vue&type=template&id=75d4b3a9&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/src/components/pages/HomePage.vue","mtime":1576816463555},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Applications/XAMPP/xamppfiles/htdocs/e28/p4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}